CREATE TABLE produtos (
	id_produto serial not null primary key,
	nome_produto varchar(255) not null,
	valor decimal(6, 2) not null
);

CREATE TABLE vendas (
	id_venda serial not null primary key,
	quantidade_produtos int not null,
	valor_total decimal(7,2) not null,
	produto_id int not null references produtos(id_produto)
);

INSERT INTO produtos (nome_produto, valor)
VALUES ('caderno', 25.00),
	('lapis', 1.00),
	('borracha', 0.5),
	('estojo', 10.00),
	('caneta', 5.00),
	('marca-texto', 6.00),
	('lapis de cor', 12.00),
	('post-it', 5.00),
	('giz de cera', 10.00);
	
DO $$ -- Inicio do bloco de comandos
DECLARE
	-- Declaração das variaveis
	quantidade int := 100;
	valor decimal := 200.00;
	valor_total decimal;
	vendedor VARCHAR(100) := 'William';

BEGIN -- Início das ações
	valor_total := quantidade * valor;
	raise notice 'O vendedor de nome % vendeu um total de %', 
	vendedor, valor_total;
	
END $$; -- Fim do bloco de codigos


-- Quantos produtos tem o valor acima da média?
	SELECT AVG(valor) from produtos;
	SELECT COUNT(*) FROM produtos
	WHERE valor > 8.2777778;

	SELECT COUNT(*) FROM produtos
	WHERE valor > (SELECT AVG(valor) from produtos);
-- Bloco de comandos
DO $$
DECLARE
	media decimal;
	quantidade int;
BEGIN
	media := (SELECT AVG(valor) FROM produtos);
	quantidade := (SELECT COUNT(*) FROM produtos
				   WHERE valor > media);
				   
	RAISE NOTICE 'A quantidade de produtos com valor acima da media é de %', quantidade;

END $$;


-- Como inserir a venda de dois cadernos?
-- SQL simples, muito simples
INSERT INTO vendas (quantidade_produtos, valor_total, produto_id)
VALUES (2, 50, 1);

-- Bloco de comandos
DO $$
DECLARE
	produto int := 1;
	quantidade int := 2;
	valor decimal;
	valor_total decimal;
BEGIN
	valor := (SELECT produtos.valor 
			  from produtos 
			  where produtos.id_produto = produto);
	valor_total := quantidade * valor;
	
	INSERT INTO vendas (quantidade_produtos, valor_total, produto_id)
	values (quantidade, valor_total, produto);
	
END $$;


SELECT * FROM vendas;
TRUNCATE vendas RESTART IDENTITY;

ALTER TABLE vendas
ADD COLUMN desconto FLOAT;
-- Estruturas condicionais

/*
IF (condicao) THEN
	comandos...
ELSE
	comandos...
END IF;
*/
DO $$
DECLARE
	quantidade int := 7;
	desconto int;
	valor_total float;
	id_prod int := 1;

BEGIN
	valor_total := (quantidade * (SELECT valor -- Comando sql basico para guiar ate o destino desejado.
								  FROM produtos 
								  WHERE id_produto = id_prod));
	IF (quantidade > 5 AND quantidade < 10) THEN
		valor_total := valor_total * 0.9;
		desconto := 10;
	ELSIF (quantidade >= 10) THEN 
		valor_total := valor_total * 0.8;
		desconto := 20;
	ELSE
		desconto := 0;
	END IF;
	
	INSERT INTO vendas (quantidade_produtos, valor_total, produto_id, desconto)
	VALUES (quantidade, valor_total, id_prod, desconto);
	-- Inserindo os valores calculados nas tabelas
	
	RAISE NOTICE '%', valor_total;
	
END $$;


-- CASE
/*
CASE
	WHEN (condição) THEN
		comandos...
	WHEN (outra condição) THEN
		comandos...
	(...)
	ELSE
		coandos...
END CASE;
*/
DO $$
DECLARE
	quantidade int := 7;
	desconto int;
	valor_total float;
	id_prod int := 1;

BEGIN
	valor_total := (quantidade * (SELECT valor -- Comando sql basico para guiar ate o destino desejado.
								  FROM produtos 
								  WHERE id_produto = id_prod));
	CASE 
		WHEN (quantidade > 5 AND quantidade < 10) THEN
			valor_total := valor_total * 0.9;
			desconto := 10;
		WHEN (quantidade >= 10) THEN 
			valor_total := valor_total * 0.8;
			desconto := 20;
		ELSE
			desconto := 0;
	END CASE;
	
	INSERT INTO vendas (quantidade_produtos, valor_total, produto_id, desconto)
	VALUES (quantidade, valor_total, id_prod, desconto);
	-- Inserindo os valores calculados nas tabelas
	
	RAISE NOTICE '%', valor_total;	
	
END $$;


-- CASE fora do bloco de programação (pode ser usado)
/*
Listar os produtos exibidos uma coluna que que os classifique de acordo com o preço
preço < 5.00 = "barato"
preço entre 5 e 10 = "normal"
preço > 10 = "caro"
*/
SELECT nome_produto AS Produto, valor AS Preço,
	CASE
		WHEN (valor <= 5.00) THEN 'barato'
		WHEN (valor > 5 AND valor <= 10) THEN 'normal'
		WHEN (valor > 10) THEN 'caro'
	END AS Classificação
FROM produtos;
